package treeGraphs;
/**
 * given a sorted array with unique int elements
 * write an algorithm to create a binary search tree
 * with minimal height
 * @author Andreas
 *
 */

public class MySolution4_3 {
	
	//public void printTree(NodeT n){
		
	//}
	
	
	public static NodeT heightTree(NodeT n, int T, int H, int[] x){
		int size =  Math.abs(T - H);
		if(size == 0){
			n = new NodeT(x[H]);
			return n;
		}
		int half = size/2;
		n = new NodeT(x[half]);
		n.setLeftNodeT(heightTree(n.getLeftNodeT(),T,half--,x));
		n.setRightNodeT(heightTree(n.getRightNodeT(),half++,H,x));
		return n;
	}
	
	public static void main(String[] args){
		int[] x = {1,3,4,5,6,8,9,11};
		NodeT node = null;
		
		heightTree(node,0,x.length-1,x);
		
	}
	
	
}
